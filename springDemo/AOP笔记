
面向切面编程：
应用场景：权限，日志，事务（原理就是AOP）
AOP术语

AOP作用：代码分离，把重复代码抽取出来，在运行的时候动态注入

连接点：
类中的所有方法都可以称为连接点，所以所有都可以被扩展的方法都可以称为连接点

切入点：真正被扩展的方法称之为切入点---就是被拦截的方法

关注点：重复的代码


切面：切入点和增强的集合----关注点形成的类

增强和通知：
扩展出来的功能称之为增强
前置增强：执行目标方法之前，先走扩展的方法
后置增强：先执行目标方法，在执行扩展方法
环绕增强：前后都执行扩展方法
最终增强：在目标方法之后执行，如果有异常，也执行
异常增强：出现异常才会增强



Target:目标对象---被代理对象

JDK动态代理---底层用的反射，使用反射技术创建类对象
cglib代理----底层用的字节码处理框架ASM，使用字节码技术创建类对象
如果加入容器的目标对象有实现接口，用JDK代理；
如果目标对象没有实现接口，用Cglib代理；