<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dobi.dao.IUserDao">
    <!--配置查询所有,resultType返回结果类型，parameterType参数类型-->
    <select id="findAll" resultType="com.dobi.domain.User">
--       别名查询，原因User实体类中元素可能和数据库表中的列名对应不上
--     select id as userId,username as userName,birthday as userBirthday,
--     sex as userSex,address as userAddress from user
        select * from user
    </select>

    <select id="findByUser" resultType="com.dobi.domain.User" parameterType="com.dobi.domain.User">
        select * from user where 1=1
        <if test="username!=null and username != '' ">
            and username like #{username}
        </if>
        <if test="address != null">
            and address like #{address}
        </if>
    </select>


    <!-- 了解的内容：抽取重复的sql语句-->
    <sql id="defaultSql">
        select * from user
    </sql>

    <!-- 根据用户信息查询 -->
    <select id="findByUserWhere" resultType="com.dobi.domain.User" parameterType="com.dobi.domain.User">
        <include refid="defaultSql"></include>
        <where>
            <if test="username!=null and username != '' ">
                and username like #{username}
            </if>
            <if test="address != null">
                and address like #{address}
            </if>
        </where>
    </select>

    <!-- 根据queryvo中的Id集合实现查询用户列表 -->
    <!--collection:代表要遍历的集合元素，注意编写时不要写#{}-->
    <!--open:代表语句的开始部分-->
    <!--close:代表结束部分-->
    <!--item:代表遍历集合的每个元素，生成的变量名-->
    <!--sperator:代表分隔符-->
    <select id="findUserInIds" resultType="com.dobi.domain.User" parameterType="com.dobi.domain.QueryVo">
        <include refid="defaultSql"></include>
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>


</mapper>